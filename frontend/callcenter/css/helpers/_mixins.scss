@mixin linkColor($color, $secondColor:null) {
	color: $color;

	@if $secondColor == null {
		$secondColor: $color;
	}

	&:visited, &:active {
		color: $color;
	}

	&:hover, &:focus {
		color: $secondColor;
	}
}

@mixin font-size($value) {
	font-size: #{$value}px;
	font-size: #{($value/10)}rem;
}

@mixin animateProperty($property, $speed:.3s, $easing:linear, $delay:0s)	{
	transition-property: #{unquote($property)};
	transition-duration: $speed;
	transition-timing-function: $easing;
	transition-delay: $delay;
}

@mixin container($columns-lg:12, $columns-md:null, $columns-sm:null, $set-padding:true) {
	margin-left: auto;
	margin-right: auto;
	width: 100%;
	max-width: 100%;

	@if $set-padding == true {
		padding-left: $grid-gutter-width;
		padding-right: $grid-gutter-width;
	}

	@if $columns-md == null {
		$columns-md: $columns-lg;
	}
	
	@if $columns-sm == null {
		$columns-sm: $columns-md;
	}

	@media (min-width: $screen-sm-min) {

		@if $set-padding == true {
			padding-left: $grid-gutter-width/2;
			padding-right: $grid-gutter-width/2;
		}
		
		width: $container-sm / 12 * $columns-sm;
	}
	@media (min-width: $screen-md-min) {
		width: $container-md / 12 * $columns-md;
	}
	@media (min-width: $screen-lg-min) {
		width: $container-lg / 12 * $columns-lg;
	}
}